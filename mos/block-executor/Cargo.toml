[package]
name = "nabob-block-executor"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
publish.workspace = true
repository.workspace = true
version.workspace = true
rust-version.workspace = true

[dependencies]
ambassador = { workspace = true }
anyhow = { workspace = true }
nabob-aggregator = { workspace = true }
nabob-drop-helper = { workspace = true }
nabob-infallible = { workspace = true }
nabob-logger = { workspace = true }
nabob-metrics-core = { workspace = true }
nabob-move-hashmap = { workspace = true }
nabob-types = { workspace = true }
nabob-vm-environment = { workspace = true }
nabob-vm-logging = { workspace = true }
nabob-vm-types = { workspace = true }
arc-swap = { workspace = true }
bcs = { workspace = true }
bytes = { workspace = true }
claims = { workspace = true }
concurrent-queue = { workspace = true }
criterion = { workspace = true, optional = true }
crossbeam = { workspace = true }
derivative = { workspace = true }
fail = { workspace = true }
hashbrown = { workspace = true }
move-binary-format = { workspace = true }
move-core-types = { workspace = true }
move-vm-runtime = { workspace = true }
move-vm-types = { workspace = true }
num_cpus = { workspace = true }
once_cell = { workspace = true }
parking_lot = { workspace = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
rand = { workspace = true }
rayon = { workspace = true }
scopeguard = { workspace = true }

[dev-dependencies]
nabob-aggregator = { workspace = true, features = ["testing"] }
nabob-language-e2e-tests = { workspace = true }
nabob-types = { workspace = true, features = ["testing"] }
criterion = { workspace = true }
fail = { workspace = true, features = ["failpoints"] }
itertools = { workspace = true }
move-vm-runtime = { workspace = true, features = ["testing"] }
move-vm-types = { workspace = true, features = ["testing"] }
proptest = { workspace = true }
proptest-derive = { workspace = true }
rand = { workspace = true }
test-case = { workspace = true }

[features]
testing = []
fuzzing = ["criterion", "proptest", "proptest-derive"]
